---
import Layout from './Layout.astro'
import useTranslation from '../locales/useTranslation'

type Heading = { text: string; slug: string; depth: number }

const { isFrench } = useTranslation(Astro)
const { frontmatter, headings } = Astro.props

// URL needs to be literal
const postsEN = await Astro.glob('../pages/docs/*.md')
const postsFR = await Astro.glob('../pages/fr/docs/*.md')

// Choose which docs to use
let posts = (isFrench() ? postsFR : postsEN).map((post) => {
	return { url: post.url, frontmatter: post.frontmatter }
})

// Sort by orderData
posts.sort((a, b) => {
	return a.frontmatter.orderData - b.frontmatter.orderData
})

// set current variable to not be confused with mapped frontmatter
const currentURL = frontmatter.url
---

<Layout title={frontmatter.title + " Â· Bonjourr's documentation"}>
	<div id='docHero'>
		<div class='hero' style={`background-image: url('${frontmatter.featured}')`}>
			<div class='container'>
				<div class='empty'></div>
				<div class='theContent'>
					<h1>{frontmatter.title}</h1>
				</div>
			</div>
		</div>
	</div>

	<article class={frontmatter.slug}>
		<div class='docs-nav'>
			<ul>
				{
					posts.map(({ url, frontmatter }) => (
						<li class={currentURL === url ? 'active' : ''}>
							<a href={url}>{frontmatter.title}</a>
							{currentURL === url && (
								<ul>
									{headings.map(({ text, slug, depth }: Heading) => (
										<li style={`text-indent: calc(${depth - 1}em)`}>
											<a href={'#' + slug}>{text}</a>
										</li>
									))}
								</ul>
							)}
						</li>
					))
				}
			</ul>
		</div>

		<div class='content'>
			{frontmatter.subtitle && <p class='subtitle'>{frontmatter.subtitle}</p>}
			<slot />
		</div>
	</article>
</Layout>

<style is:global lang='scss'>
	@import '../styles/_global.scss';

	.hero,
	article {
		@include sidePadding;
	}

	.hero {
		height: 33vh;
		min-height: 250px;
		color: white;
		display: flex;
		background-size: cover;
		background-position: center;

		.container {
			display: flex;
			width: 100%;

			.empty {
				flex: 1;

				@include md {
					display: none;
				}
			}

			.theContent {
				flex: 4;
				display: flex;
				flex-direction: column;
				justify-content: center;
				@include textShadow;

				@include md {
					width: 100% !important;
				}

				@include sm {
					margin-top: 50px;
				}
			}
		}

		h1 {
			font-weight: 500;
			font-size: 60px;

			@include md {
				font-size: 40px;
			}

			@include sm {
				font-size: 30px;
			}
		}
	}

	code {
		border-radius: 3px;
		padding: 2px 10px;
		font-size: 14px;
		font-weight: 600;
		color: #e6db74;
		background-color: #333;
		overflow-wrap: break-word;
	}

	pre {
		tab-size: 1.5em;
		padding: 1.5em;
		border-radius: 0.5em;
	}

	article.profiles pre {
		white-space: normal;
	}

	pre > code {
		background-color: transparent;
	}

	article {
		position: relative;
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		margin: 5em auto 0 auto;
		padding-bottom: 16em;
		font-size: 16px;
		gap: 4em;
	}

	.docs-nav {
		line-height: 1.7em;
		min-width: 300px;
		list-style: outside;

		a {
			color: #fff;
			opacity: 0.8;
		}

		ul li.active > a {
			opacity: 1;
			font-weight: bolder;
		}

		> ul {
			position: sticky;
			top: 2em;
		}

		ul {
			padding-left: 0;
			list-style: none;

			li {
				padding: 0.2em;

				a {
					padding: 0.4em 1em;
					border-radius: 4px;

					&:hover {
						background-color: #fff3;
						opacity: 1;
					}
				}
			}
		}

		@include md {
			margin-bottom: 2em;
		}
	}

	.content {
		max-width: 700px;
		width: 100%;

		.subtitle {
			margin-bottom: 3em;
		}

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			margin: 0 0 20px 0;
			padding-top: 60px;
			font-weight: 500;

			&:first-child {
				padding-top: 0;
			}
		}

		h2 {
			font-size: 1.8em;
		}

		li {
			margin: 1em 0;
		}

		p,
		ul {
			margin-bottom: 1em;
			line-height: 1.5em;
		}

		strong {
			font-weight: 500;
		}

		img {
			width: 100%;
		}

		a {
			color: #0766d9;

			&:hover {
				text-decoration: underline;
			}

			@media (prefers-color-scheme: dark) {
				opacity: 1;
				color: #318cfc;
			}

			&.gatsby-resp-image-link {
				opacity: 1;
			}
		}
	}

	table {
		width: 800px;
		max-width: 100%;
		border-collapse: collapse;
		word-break: break-word;

		th {
			padding: 1em;
			text-align: left;
		}

		td {
			padding: 1em;
			border: 1px solid #ccc;
			max-width: 500px;

			@media (prefers-color-scheme: dark) {
				border-color: #666;
			}
		}
	}

	body {
		@media (prefers-color-scheme: dark) {
			background: rgb(39, 39, 39);
			article,
			.docNav a {
				color: rgb(240, 240, 240);
			}
		}

		&.css-snippet {
			h3 {
				margin-bottom: 5px;
			}
		}
	}

	// @media only screen and (max-width: 1100px) {
	// 	article {
	// 		flex-direction: column;
	// 	}
	// }
</style>
